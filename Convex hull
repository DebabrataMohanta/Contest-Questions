#include <bits/stdc++.h> // header file includes every Standard library
using namespace std;

int orientation(pair<int,int>p,pair<int,int>q,pair<int,int>r){
    int val=(q.second-p.second)*(r.first-q.first)-(q.first-p.first)*(r.second-q.second);
    if(val==0) return 0;
    return (val>0)?1:2;
}
void convexHullpair(pair<int,int>points[],int n){
    if(n<3) return;
    vector<pair<int,int>> hull;
    int l=0;
    for(int i=1;i<n;i++)
    if(points[i].first<points[l].first)
    l=i;
    int p=l,q;
    do{
        hull.push_back(points[p]);
        q=(p+1)%n;
        for(int i=0;i<n;i++){
            if(orientation(points[p],points[i],points[q])==2)
            q=i;
        }
        p=q;
    }while(p!=l);
    sort(hull.begin(),hull.end());
    for(int i=0;i<hull.size()-1;i++){
        cout<<hull[i].first<<" "<<hull[i].second<<", ";

    }
    cout<<hull[hull.size()-1].first<<" "<<hull[hull.size()-1].second;
}
int main(){
    int n;
    cin>>n;
    pair<int,int>p[n];int w,r;
    for(int i=0;i<n;i++){
        cin>>w>>r;
        p[i].first=w;
        p[i].second=r;
    }
    convexHullpair(p,n);
    return 0;
}
